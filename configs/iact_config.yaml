# seed for the random number generators, to make things reproducible
seed: 0


# telescope_type_key: telescope_type_name
telescope_events_key: telescope_events
array_events_key: array_events
runs_key: runs


multiple_telescopes: True


# selection:
#     length:
#       - '>'
#       - 0.02
#     width:
#       - '>'
#       - 0.01

# config for the energy regression
energy:
  regressor : |
    ensemble.RandomForestRegressor(
      n_estimators=150,
      max_features='sqrt',
      n_jobs=-1,
      max_depth=12,
    )


  target_column: mc_energy

  # define the number of cross validations to perform
  n_cross_validations : 3

  # Define the name of the category you want to find. The default is 'gamma_energy'.
  # It will be written as <class_name>_prediction into the file when applying the model.
  class_name: gamma_energy

  # Define the name of the column that contains the name of the telescope in case you're working
  # with mulitple telescopes and telescope types
  telescope_type_key: telescope_type_name

  features:
    - num_triggered_telescopes
    - width
    - length
    - skewness
    - kurtosis
    - intensity
    - camera_id
    - telescope_type_id
    - total_intensity
    # - h_max_prediction
    - distance_to_core
    - num_triggered_lst
    - num_triggered_mst
    - num_triggered_sst
    - r

  feature_generation:
    needed_columns:
      - width
      - length
      - intensity
    features:
      area: width * length
      width_length: 1 - (width / length)
      log_size: log(intensity)
      log_size_area: log(intensity) / (width * length)


# config for the g/h separation
separator:
  classifier : |
    ensemble.RandomForestClassifier(
        n_estimators=150,
        max_features='sqrt',
        n_jobs=-1,
        max_depth=15,
        criterion='entropy',
    )


  # n_signal: 100000
  #n_background: 100000

  n_cross_validations : 3

  # telescope_type_key: telescope_type_name
  # telescope_events_key: telescope_events
  # array_events_key: array_events
  # runs_key: runs

  multiple_telescopes: True

  calibrate_classifier: True

  features:
    - num_triggered_telescopes
    - width
    - length
    - skewness
    - kurtosis
    - intensity
    - camera_id
    - telescope_type_id
    - total_intensity
    # - h_max_prediction
    - distance_to_core
    - num_triggered_lst
    - num_triggered_mst
    - num_triggered_sst
    # - psi
    # - phi
    # - r

  feature_generation:
    needed_columns:
      - width
      - length
      - intensity
    features:
      area: width * length
      width_length: 1 - (width / length)
      log_size: log(intensity)
      log_size_area: log(intensity) / (width * length)
