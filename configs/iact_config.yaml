# seed for the random number generators, to make things reproducible
seed: 0


# telescope_type_key: telescope_type_name
telescope_events_key: telescope_events
array_events_key: array_events
runs_key: runs


multiple_telescopes: True

# selection:
#     intensity:
#       - '>'  # needs to be in quotes because > and ! are special character in yaml
#       - 50
#     length:
#       - '>'
#       - 0.02
#     leakage1_intensity:
#       - <
#       - 0.5

# config for the energy regression
energy:
  # regressor : |
  #   ensemble.RandomForestRegressor(
  #     n_estimators=200,
  #     max_features='sqrt',
  #     n_jobs=-1,
  #     max_depth=16,
  #   )
  regressor : |
    ensemble.ExtraTreesRegressor(
        n_estimators=200,
        # max_features='sqrt',
        min_samples_split=15,
        n_jobs=-1,
    )

  log_target: True

  target_column: mc_energy

  # define the number of cross validations to perform
  n_cross_validations : 2

  # Define the name of the category you want to find. The default is 'gamma_energy'.
  # It will be written as <class_name>_prediction into the file when applying the model.
  class_name: gamma_energy

  # Define the name of the column that contains the name of the telescope in case you're working
  # with mulitple telescopes and telescope types
  telescope_type_key: telescope_type_name

  features:
    - num_triggered_telescopes
    - width
    - length
    - skewness
    - kurtosis
    - intensity
    - camera_type_id
    - telescope_type_id
    - total_intensity
    - average_intensity
    - h_max
    - distance_to_reconstructed_core_position
    - num_triggered_lst
    - num_triggered_mst
    - num_triggered_sst
    - mirror_area
    - focal_length
    - leakage1_intensity
    - leakage2_intensity
    - leakage1_pixel
    - leakage2_pixel
    - concentration_pixel
    - concentration_core
    - concentration_cog
    - r

  feature_generation:
    needed_columns:
      - width
      - length
      - intensity
    features:
      area: width * length
      width_length: 1 - (width / length)
      log_size: log(intensity)
      log_size_area: log(intensity) / (width * length)

# config for the g/h separation
separator:
  # classifier : |
    # ensemble.RandomForestClassifier(
    #     n_estimators=200,
    #     max_features='sqrt',
    #     n_jobs=-1,
    #     max_depth=14,
    #     criterion='entropy',
    # )
  classifier : |
    ensemble.ExtraTreesClassifier(
        n_estimators=200,
        # max_features='sqrt',
        criterion='entropy',
        min_samples_split=15,
        n_jobs=-1,
    )
  
  # n_signal: 100000
  #n_background: 100000

  n_cross_validations : 2

  # telescope_type_key: telescope_type_name
  # telescope_events_key: telescope_events
  # array_events_key: array_events
  # runs_key: runs

  multiple_telescopes: True

  calibrate_classifier: True

  features:
    - num_triggered_telescopes
    - width
    - length
    - skewness
    - kurtosis
    - intensity
    - camera_type_id
    - telescope_type_id
    - total_intensity
    - average_intensity
    - h_max
    - distance_to_reconstructed_core_position
    - num_triggered_lst
    - num_triggered_mst
    - num_triggered_sst
    - mirror_area
    - focal_length
    - leakage1_intensity
    - leakage2_intensity
    - leakage1_pixel
    - leakage2_pixel
    - concentration_pixel
    - concentration_core
    - concentration_cog
    - r


  feature_generation:
    needed_columns:
      - width
      - length
      - intensity
    features:
      area: width * length
      width_length: 1 - (width / length)
      log_size: log(intensity)
      log_size_area: log(intensity) / (width * length)
